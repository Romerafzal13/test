{"ast":null,"code":"import React,{useState,useEffect}from'react';import Leaderboard from'./leaderboard';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE='http://localhost:5000/api';function Quiz(){const[mode,setMode]=useState(null);const[quizPairs,setQuizPairs]=useState([]);const[index,setIndex]=useState(0);const[score,setScore]=useState(0);const[userAnswer,setUserAnswer]=useState('');const[feedback,setFeedback]=useState('');const[loading,setLoading]=useState(false);const[continentInput,setContinentInput]=useState('');const[askContinent,setAskContinent]=useState(false);const[username,setUsername]=useState('');const[askUsername,setAskUsername]=useState(false);const[scoreSaved,setScoreSaved]=useState(false);const[showLeaderboard,setShowLeaderboard]=useState(false);useEffect(()=>{const isQuizDone=quizPairs.length>0&&index>=quizPairs.length;if(isQuizDone&&!scoreSaved){const sendScore=async()=>{try{const response=await fetch('http://localhost:5000/api/score',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username:username||'Anonymous',mode,continent:continentInput.trim()||'All',score,total:quizPairs.length})});const result=await response.json();console.log('Score saved:',result);setScoreSaved(true);}catch(err){console.error('Error saving score:',err);}};sendScore();}},[index,quizPairs.length,scoreSaved,username,mode,continentInput,score]);// Ask for username after mode selection\nconst handleModeSelect=selectedMode=>{setMode(selectedMode);setAskUsername(true);setScore(0);setIndex(0);setFeedback('');setUserAnswer('');setAskContinent(false);setContinentInput('');setScoreSaved(false);setQuizPairs([]);};// After username is entered, fetch quiz data\nconst handleUsernameSubmit=()=>{setAskUsername(false);if(mode===2){setAskContinent(true);}else{fetchQuizData(1);}};const fetchQuizData=async function(modeSelected){let continent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';setLoading(true);setScore(0);setIndex(0);setFeedback('');setUserAnswer('');setAskContinent(false);setContinentInput(continent||'');setScoreSaved(false);let url=modeSelected===1?`${API_BASE}/mode1`:`${API_BASE}/mode2`;if(continent){url+=`?continent=${continent}`;}try{const response=await fetch(url);if(!response.ok){const err=await response.json();alert(err.message);setMode(null);setLoading(false);return;}const data=await response.json();setQuizPairs(data);}catch(err){console.error('Fetch failed:',err);}finally{setLoading(false);}};const submitContinent=()=>{setAskContinent(false);fetchQuizData(2,continentInput.trim());};const checkAnswer=()=>{if(!quizPairs.length||index>=quizPairs.length)return;const current=quizPairs[index];const answer=userAnswer.trim().toLowerCase();if(mode===1){if(answer===current.country.toLowerCase()){setScore(prev=>prev+1);setFeedback('Correct!');}else{setFeedback(`Incorrect! The correct answer was '${current.country}'`);}}else if(mode===2){if(answer===current.capital.toLowerCase()){setScore(prev=>prev+1);setFeedback('Correct!');}else{setFeedback(`Incorrect! The capital of '${current.country}' is '${current.capital}'`);}}setIndex(prev=>prev+1);setUserAnswer('');};const renderQuestion=()=>{if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading quiz data...\"});if(!mode)return/*#__PURE__*/_jsx(\"p\",{children:\"Select a mode to begin.\"});const isQuizDone=quizPairs.length>0&&index>=quizPairs.length;if(askUsername){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enter your name to begin:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value),onKeyDown:e=>e.key==='Enter'&&handleUsernameSubmit(),placeholder:\"Your name\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUsernameSubmit,style:{marginTop:'10px'},children:\"Continue\"})]});}if(askContinent){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Enter a continent name (or leave blank for all):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:continentInput,onChange:e=>setContinentInput(e.target.value),onKeyDown:e=>e.key==='Enter'&&submitContinent(),placeholder:\"Continent name\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:submitContinent,style:{marginTop:'10px'},children:\"Start Quiz\"})]});}if(isQuizDone){return/*#__PURE__*/_jsxs(\"p\",{children:[\"Quiz Complete! You scored \",score,\" out of \",quizPairs.length,\".\"]});}if(!quizPairs.length){return/*#__PURE__*/_jsx(\"p\",{children:\"Waiting for quiz data...\"});}const current=quizPairs[index];const question=mode===1?`Which country has the capital '${current.capital}'?`:`What is the capital of '${current.country}'?`;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:question}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:userAnswer,onChange:e=>setUserAnswer(e.target.value),onKeyDown:e=>e.key==='Enter'&&checkAnswer(),placeholder:\"Enter your answer\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:checkAnswer,style:{marginTop:'10px'},children:\"Submit\"}),/*#__PURE__*/_jsx(\"p\",{style:{background:'lightpink',width:'290px',marginLeft:'450px',borderRadius:'3px'},children:feedback}),/*#__PURE__*/_jsxs(\"p\",{style:{background:'lightpink',width:'100px',marginLeft:'560px',borderRadius:'3px',colour:'darkgreen',font:'bold'},children:[\"Score: \",score,\" / \",index]})]});};return/*#__PURE__*/_jsxs(\"div\",{style:{color:'Black',fontFamily:'roboto',textAlign:'center',padding:'20px',minHeight:'100vh',backgroundImage:'url(\"/world-map.gif\")',backgroundSize:'cover',backgroundPosition:'center',backgroundRepeat:'no-repeat'},children:[/*#__PURE__*/_jsx(\"h1\",{style:{color:'darkblue'},children:\"Geography Quiz\"}),!mode&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{style:{background:'skyblue',border:'solid lightblue',borderRadius:'5px'},onClick:()=>handleModeSelect(1),children:\"Mode 1: Guess Country from Capital\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{style:{background:'skyblue',border:'solid lightblue',borderRadius:'5px'},onClick:()=>handleModeSelect(2),children:\"Mode 2: Guess Capital of Country\"}),/*#__PURE__*/_jsx(\"br\",{}),\" \",/*#__PURE__*/_jsx(\"br\",{}),showLeaderboard&&/*#__PURE__*/_jsx(Leaderboard,{onClose:()=>setShowLeaderboard(false)}),/*#__PURE__*/_jsx(\"button\",{style:{background:'#ffd700',border:'1px solid gold',borderRadius:'5px',padding:'8px 16px'},onClick:()=>setShowLeaderboard(true),children:\"View Leaderboard\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),renderQuestion(),mode&&/*#__PURE__*/_jsx(\"button\",{style:{background:'white',color:'darkblue'},onClick:()=>setMode(null),children:\"Back to Mode Selection\"})]});}export default Quiz;","map":{"version":3,"names":["React","useState","useEffect","Leaderboard","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","API_BASE","Quiz","mode","setMode","quizPairs","setQuizPairs","index","setIndex","score","setScore","userAnswer","setUserAnswer","feedback","setFeedback","loading","setLoading","continentInput","setContinentInput","askContinent","setAskContinent","username","setUsername","askUsername","setAskUsername","scoreSaved","setScoreSaved","showLeaderboard","setShowLeaderboard","isQuizDone","length","sendScore","response","fetch","method","headers","body","JSON","stringify","continent","trim","total","result","json","console","log","err","error","handleModeSelect","selectedMode","handleUsernameSubmit","fetchQuizData","modeSelected","arguments","undefined","url","ok","alert","message","data","submitContinent","checkAnswer","current","answer","toLowerCase","country","prev","capital","renderQuestion","children","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","style","marginTop","question","background","width","marginLeft","borderRadius","colour","font","color","fontFamily","textAlign","padding","minHeight","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","border","onClose"],"sources":["C:/Users/User/Desktop/web-app/frontend/src/quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Leaderboard from './leaderboard';\r\nconst API_BASE = 'http://localhost:5000/api';\r\n\r\nfunction Quiz() {\r\n  const [mode, setMode] = useState(null);\r\n  const [quizPairs, setQuizPairs] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [continentInput, setContinentInput] = useState('');\r\n  const [askContinent, setAskContinent] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [askUsername, setAskUsername] = useState(false);\r\n  const [scoreSaved, setScoreSaved] = useState(false);\r\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const isQuizDone = quizPairs.length > 0 && index >= quizPairs.length;\r\n    if (isQuizDone && !scoreSaved) {\r\n      const sendScore = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/api/score', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              username: username || 'Anonymous',\r\n              mode,\r\n              continent: continentInput.trim() || 'All',\r\n              score,\r\n              total: quizPairs.length\r\n            })\r\n          });\r\n          const result = await response.json();\r\n          console.log('Score saved:', result);\r\n          setScoreSaved(true);\r\n        } catch (err) {\r\n          console.error('Error saving score:', err);\r\n        }\r\n      };\r\n      sendScore();\r\n    }\r\n  }, [index, quizPairs.length, scoreSaved, username, mode, continentInput, score]);\r\n\r\n  // Ask for username after mode selection\r\n  const handleModeSelect = (selectedMode) => {\r\n    setMode(selectedMode);\r\n    setAskUsername(true);\r\n    setScore(0);\r\n    setIndex(0);\r\n    setFeedback('');\r\n    setUserAnswer('');\r\n    setAskContinent(false);\r\n    setContinentInput('');\r\n    setScoreSaved(false);\r\n    setQuizPairs([]);\r\n  };\r\n\r\n  // After username is entered, fetch quiz data\r\n  const handleUsernameSubmit = () => {\r\n    setAskUsername(false);\r\n    if (mode === 2) {\r\n      setAskContinent(true);\r\n    } else {\r\n      fetchQuizData(1);\r\n    }\r\n  };\r\n\r\n  const fetchQuizData = async (modeSelected, continent = '') => {\r\n    setLoading(true);\r\n    setScore(0);\r\n    setIndex(0);\r\n    setFeedback('');\r\n    setUserAnswer('');\r\n    setAskContinent(false);\r\n    setContinentInput(continent || '');\r\n    setScoreSaved(false);\r\n\r\n    let url = modeSelected === 1 ? `${API_BASE}/mode1` : `${API_BASE}/mode2`;\r\n    if (continent) {\r\n      url += `?continent=${continent}`;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        const err = await response.json();\r\n        alert(err.message);\r\n        setMode(null);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      setQuizPairs(data);\r\n    } catch (err) {\r\n      console.error('Fetch failed:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const submitContinent = () => {\r\n    setAskContinent(false);\r\n    fetchQuizData(2, continentInput.trim());\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (!quizPairs.length || index >= quizPairs.length) return;\r\n\r\n    const current = quizPairs[index];\r\n    const answer = userAnswer.trim().toLowerCase();\r\n\r\n    if (mode === 1) {\r\n      if (answer === current.country.toLowerCase()) {\r\n        setScore(prev => prev + 1);\r\n        setFeedback('Correct!');\r\n      } else {\r\n        setFeedback(`Incorrect! The correct answer was '${current.country}'`);\r\n      }\r\n    } else if (mode === 2) {\r\n      if (answer === current.capital.toLowerCase()) {\r\n        setScore(prev => prev + 1);\r\n        setFeedback('Correct!');\r\n      } else {\r\n        setFeedback(`Incorrect! The capital of '${current.country}' is '${current.capital}'`);\r\n      }\r\n    }\r\n    setIndex(prev => prev + 1);\r\n    setUserAnswer('');\r\n  };\r\n\r\n  const renderQuestion = () => {\r\n    if (loading) return <p>Loading quiz data...</p>;\r\n    if (!mode) return <p>Select a mode to begin.</p>;\r\n    const isQuizDone = quizPairs.length > 0 && index >= quizPairs.length;\r\n\r\n    if (askUsername) {\r\n      return (\r\n        <>\r\n          <h2>Enter your name to begin:</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            onKeyDown={(e) => e.key === 'Enter' && handleUsernameSubmit()}\r\n            placeholder=\"Your name\"\r\n          />\r\n          <br />\r\n          <button onClick={handleUsernameSubmit} style={{ marginTop: '10px' }}>\r\n            Continue\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (askContinent) {\r\n      return (\r\n        <>\r\n          <h2>Enter a continent name (or leave blank for all):</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={continentInput}\r\n            onChange={(e) => setContinentInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === 'Enter' && submitContinent()}\r\n            placeholder=\"Continent name\"\r\n          />\r\n          <br />\r\n          <button onClick={submitContinent} style={{ marginTop: '10px' }}>\r\n            Start Quiz\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (isQuizDone) {\r\n      return <p>Quiz Complete! You scored {score} out of {quizPairs.length}.</p>;\r\n    }\r\n\r\n    if (!quizPairs.length) {\r\n      return <p>Waiting for quiz data...</p>;\r\n    }\r\n\r\n    const current = quizPairs[index];\r\n    const question =\r\n      mode === 1\r\n        ? `Which country has the capital '${current.capital}'?`\r\n        : `What is the capital of '${current.country}'?`;\r\n\r\n    return (\r\n      <>\r\n        <h2>{question}</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={userAnswer}\r\n          onChange={(e) => setUserAnswer(e.target.value)}\r\n          onKeyDown={(e) => e.key === 'Enter' && checkAnswer()}\r\n          placeholder=\"Enter your answer\"\r\n        />\r\n        <br />\r\n        <button onClick={checkAnswer} style={{ marginTop: '10px' }}>\r\n          Submit\r\n        </button>\r\n        <p style={{background:'lightpink',width:'290px',marginLeft:'450px',borderRadius: '3px' }}>{feedback}</p>\r\n        <p style={{background:'lightpink',width:'100px',marginLeft:'560px',borderRadius: '3px' ,colour:'darkgreen',font:'bold'}}>Score: {score} / {index}</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        color: 'Black',\r\n        fontFamily: 'roboto',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        minHeight: '100vh',\r\n        backgroundImage: 'url(\"/world-map.gif\")',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n      }}\r\n    >\r\n      <h1 style={{ color: 'darkblue' }}>Geography Quiz</h1>\r\n\r\n      {!mode && (\r\n        <>\r\n          <button\r\n            style={{ background: 'skyblue', border: 'solid lightblue', borderRadius: '5px' }}\r\n            onClick={() => handleModeSelect(1)}\r\n          >\r\n            Mode 1: Guess Country from Capital\r\n          </button>\r\n          <br /><br />\r\n          <button\r\n            style={{ background: 'skyblue', border: 'solid lightblue', borderRadius: '5px' }}\r\n            onClick={() => handleModeSelect(2)}\r\n          >\r\n            Mode 2: Guess Capital of Country\r\n          </button>\r\n          <br /> <br />\r\n          {showLeaderboard && <Leaderboard onClose={() => setShowLeaderboard(false)} />}\r\n          <button\r\n            style={{ background: '#ffd700', border: '1px solid gold', borderRadius: '5px', padding: '8px 16px' }}\r\n            onClick={() => setShowLeaderboard(true)}\r\n          >\r\n            View Leaderboard\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      <br /><br />\r\n      {renderQuestion()}\r\n\r\n      {mode && (\r\n        <button\r\n          style={{ background:'white',color: 'darkblue' }}\r\n          onClick={() => setMode(null)}\r\n        >\r\n          Back to Mode Selection\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
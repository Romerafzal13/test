{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\web-app\\\\frontend\\\\src\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Leaderboard from './leaderboard';\nimport CountryMap from './countrymap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:5000/api';\nfunction Quiz() {\n  _s();\n  const [mode, setMode] = useState(null);\n  const [quizPairs, setQuizPairs] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [continentInput, setContinentInput] = useState('');\n  const [askContinent, setAskContinent] = useState(false);\n  const [username, setUsername] = useState('');\n  const [askUsername, setAskUsername] = useState(false);\n  const [scoreSaved, setScoreSaved] = useState(false);\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\n  useEffect(() => {\n    const isQuizDone = quizPairs.length > 0 && index >= quizPairs.length;\n    if (isQuizDone && !scoreSaved) {\n      const sendScore = async () => {\n        try {\n          const response = await fetch(`${API_BASE}/score`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              username: username || 'Anonymous',\n              mode,\n              continent: continentInput.trim() || 'All',\n              score,\n              total: quizPairs.length\n            })\n          });\n          const result = await response.json();\n          console.log('Score saved:', result);\n          setScoreSaved(true);\n        } catch (err) {\n          console.error('Error saving score:', err);\n        }\n      };\n      sendScore();\n    }\n  }, [index, quizPairs.length, scoreSaved, username, mode, continentInput, score]);\n  const handleModeSelect = selectedMode => {\n    setMode(selectedMode);\n    setAskUsername(true);\n    setScore(0);\n    setIndex(0);\n    setFeedback('');\n    setUserAnswer('');\n    setAskContinent(false);\n    setContinentInput('');\n    setScoreSaved(false);\n    setQuizPairs([]);\n  };\n  const handleUsernameSubmit = () => {\n    setAskUsername(false);\n    if (mode === 2) {\n      setAskContinent(true);\n    } else {\n      fetchQuizData(1);\n    }\n  };\n  const fetchQuizData = async (modeSelected, continent = '') => {\n    setLoading(true);\n    setScore(0);\n    setIndex(0);\n    setFeedback('');\n    setUserAnswer('');\n    setAskContinent(false);\n    setContinentInput(continent || '');\n    setScoreSaved(false);\n    let url = modeSelected === 1 ? `${API_BASE}/mode1` : `${API_BASE}/mode2`;\n    if (continent) url += `?continent=${continent}`;\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        const err = await response.json();\n        alert(err.message);\n        setMode(null);\n        setLoading(false);\n        return;\n      }\n      const data = await response.json();\n      setQuizPairs(data);\n    } catch (err) {\n      console.error('Fetch failed:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const submitContinent = () => {\n    setAskContinent(false);\n    fetchQuizData(2, continentInput.trim());\n  };\n  const checkAnswer = () => {\n    if (!quizPairs.length || index >= quizPairs.length) return;\n    const current = quizPairs[index];\n    const answer = userAnswer.trim().toLowerCase();\n    const correct = mode === 1 && answer === current.country.toLowerCase() || mode === 2 && answer === current.capital.toLowerCase();\n    setScore(prev => prev + (correct ? 1 : 0));\n    setFeedback(correct ? '✅ Correct!' : mode === 1 ? `❌ Incorrect! The correct answer was '${current.country}'` : `❌ Incorrect! The capital of '${current.country}' is '${current.capital}'`);\n    setIndex(prev => prev + 1);\n    setUserAnswer('');\n  };\n  const buttonStyle = {\n    background: 'linear-gradient(to right, #00c6ff, #0072ff)',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '8px',\n    padding: '10px 20px',\n    margin: '10px',\n    cursor: 'pointer',\n    fontSize: '1rem',\n    transition: 'background 0.3s ease'\n  };\n  const renderQuestion = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading quiz data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }, this);\n    if (!mode) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a mode to begin.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }, this);\n    const isQuizDone = quizPairs.length > 0 && index >= quizPairs.length;\n    if (askUsername) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83E\\uDDD1 Enter your name to begin:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleUsernameSubmit(),\n          placeholder: \"Your name\",\n          style: {\n            padding: '10px',\n            borderRadius: '6px',\n            border: '1px solid #ccc',\n            width: '70%',\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUsernameSubmit,\n          style: buttonStyle,\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    }\n    if (askContinent) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDF0D Choose a continent (or leave blank for all):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: continentInput,\n          onChange: e => setContinentInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && submitContinent(),\n          placeholder: \"e.g. Asia\",\n          style: {\n            padding: '10px',\n            borderRadius: '6px',\n            border: '1px solid #ccc',\n            width: '70%',\n            marginBottom: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitContinent,\n          style: buttonStyle,\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this);\n    }\n    if (isQuizDone) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '20px',\n          backgroundColor: '#ffffff20',\n          borderRadius: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDF89 Quiz Complete!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"You scored \", score, \" out of \", quizPairs.length, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this);\n    }\n    if (!quizPairs.length) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for quiz data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 35\n    }, this);\n    const current = quizPairs[index];\n    const question = mode === 1 ? `Which country has the capital '${current.capital}'?` : `What is the capital of '${current.country}'?`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#ffffff10',\n        padding: '20px',\n        borderRadius: '12px',\n        boxShadow: '0 4px 20px rgba(0,0,0,0.2)',\n        maxWidth: '600px',\n        marginBottom: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: '#ffd700'\n        },\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userAnswer,\n        onChange: e => setUserAnswer(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && checkAnswer(),\n        placeholder: \"Enter your answer\",\n        style: {\n          padding: '10px',\n          borderRadius: '8px',\n          border: '1px solid #ccc',\n          width: '80%',\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        style: buttonStyle,\n        children: \"Submit Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#ffffff20',\n          padding: '15px',\n          borderRadius: '10px',\n          marginTop: '20px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: 'bold',\n            fontSize: '1.2rem'\n          },\n          children: feedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#90ee90'\n          },\n          children: [\"Score: \", score, \" / \", index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), quizPairs.length > 0 && index < quizPairs.length && /*#__PURE__*/_jsxDEV(CountryMap, {\n        style: {\n          height: '250px',\n          width: '200px',\n          borderRadius: '10px'\n        },\n        lat: parseFloat(quizPairs[index].lat),\n        lng: parseFloat(quizPairs[index].lng)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: `'Segoe UI', Roboto, sans-serif`,\n      color: '#f5f5f5',\n      padding: '30px',\n      minHeight: '100vh',\n      backgroundImage: `linear-gradient(to right, rgba(32, 55, 65, 0.8), rgba(40, 60, 69, 0.8)), url(\"/world-map.gif\")`,\n      backgroundSize: 'cover',\n      // 👈 Ensures full coverage\n      backgroundPosition: 'center',\n      // 👈 Centers image\n      backgroundRepeat: 'no-repeat',\n      // 👈 Prevents tiling\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '2.5rem',\n        marginBottom: '20px',\n        color: '#ffd700'\n      },\n      children: \"\\uD83C\\uDF0D Geography Quiz Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), !mode && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => handleModeSelect(1),\n        children: \"Mode 1: Guess Country from Capital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => handleModeSelect(2),\n        children: \"Mode 2: Guess Capital of Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          ...buttonStyle,\n          background: 'linear-gradient(to right, #ff416c, #ff4b2b)'\n        },\n        onClick: () => setShowLeaderboard(true),\n        children: \"View Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), showLeaderboard && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '30px',\n          width: '100%',\n          maxWidth: '800px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Leaderboard, {\n          onClose: () => setShowLeaderboard(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true), renderQuestion(), mode && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        ...buttonStyle,\n        background: 'linear-gradient(to right, #8e2de2, #4a00e0)',\n        marginTop: '20px'\n      },\n      onClick: () => setMode(null),\n      children: \"\\u2B05 Back to Mode Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 1\n  }, this);\n}\n_s(Quiz, \"6xIHwQ33QcB/aX2aB3y8t3pcdB0=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Leaderboard","CountryMap","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","Quiz","_s","mode","setMode","quizPairs","setQuizPairs","index","setIndex","score","setScore","userAnswer","setUserAnswer","feedback","setFeedback","loading","setLoading","continentInput","setContinentInput","askContinent","setAskContinent","username","setUsername","askUsername","setAskUsername","scoreSaved","setScoreSaved","showLeaderboard","setShowLeaderboard","isQuizDone","length","sendScore","response","fetch","method","headers","body","JSON","stringify","continent","trim","total","result","json","console","log","err","error","handleModeSelect","selectedMode","handleUsernameSubmit","fetchQuizData","modeSelected","url","ok","alert","message","data","submitContinent","checkAnswer","current","answer","toLowerCase","correct","country","capital","prev","buttonStyle","background","color","border","borderRadius","padding","margin","cursor","fontSize","transition","renderQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","type","value","onChange","e","target","onKeyDown","key","placeholder","width","onClick","backgroundColor","question","boxShadow","maxWidth","marginTop","textAlign","fontWeight","height","lat","parseFloat","lng","fontFamily","minHeight","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","display","flexDirection","alignItems","onClose","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/web-app/frontend/src/quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Leaderboard from './leaderboard';\r\nimport CountryMap from './countrymap';\r\n\r\nconst API_BASE = 'http://localhost:5000/api';\r\n\r\nfunction Quiz() {\r\n  const [mode, setMode] = useState(null);\r\n  const [quizPairs, setQuizPairs] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [continentInput, setContinentInput] = useState('');\r\n  const [askContinent, setAskContinent] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [askUsername, setAskUsername] = useState(false);\r\n  const [scoreSaved, setScoreSaved] = useState(false);\r\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const isQuizDone = quizPairs.length > 0 && index >= quizPairs.length;\r\n    if (isQuizDone && !scoreSaved) {\r\n      const sendScore = async () => {\r\n        try {\r\n          const response = await fetch(`${API_BASE}/score`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              username: username || 'Anonymous',\r\n              mode,\r\n              continent: continentInput.trim() || 'All',\r\n              score,\r\n              total: quizPairs.length\r\n            })\r\n          });\r\n          const result = await response.json();\r\n          console.log('Score saved:', result);\r\n          setScoreSaved(true);\r\n        } catch (err) {\r\n          console.error('Error saving score:', err);\r\n        }\r\n      };\r\n      sendScore();\r\n    }\r\n  }, [index, quizPairs.length, scoreSaved, username, mode, continentInput, score]);\r\n\r\n  const handleModeSelect = (selectedMode) => {\r\n    setMode(selectedMode);\r\n    setAskUsername(true);\r\n    setScore(0);\r\n    setIndex(0);\r\n    setFeedback('');\r\n    setUserAnswer('');\r\n    setAskContinent(false);\r\n    setContinentInput('');\r\n    setScoreSaved(false);\r\n    setQuizPairs([]);\r\n  };\r\n\r\n  const handleUsernameSubmit = () => {\r\n    setAskUsername(false);\r\n    if (mode === 2) {\r\n      setAskContinent(true);\r\n    } else {\r\n      fetchQuizData(1);\r\n    }\r\n  };\r\n\r\n  const fetchQuizData = async (modeSelected, continent = '') => {\r\n    setLoading(true);\r\n    setScore(0);\r\n    setIndex(0);\r\n    setFeedback('');\r\n    setUserAnswer('');\r\n    setAskContinent(false);\r\n    setContinentInput(continent || '');\r\n    setScoreSaved(false);\r\n\r\n    let url = modeSelected === 1 ? `${API_BASE}/mode1` : `${API_BASE}/mode2`;\r\n    if (continent) url += `?continent=${continent}`;\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        const err = await response.json();\r\n        alert(err.message);\r\n        setMode(null);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      const data = await response.json();\r\n      setQuizPairs(data);\r\n    } catch (err) {\r\n      console.error('Fetch failed:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const submitContinent = () => {\r\n    setAskContinent(false);\r\n    fetchQuizData(2, continentInput.trim());\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (!quizPairs.length || index >= quizPairs.length) return;\r\n\r\n    const current = quizPairs[index];\r\n    const answer = userAnswer.trim().toLowerCase();\r\n\r\n    const correct =\r\n      (mode === 1 && answer === current.country.toLowerCase()) ||\r\n      (mode === 2 && answer === current.capital.toLowerCase());\r\n\r\n    setScore(prev => prev + (correct ? 1 : 0));\r\n    setFeedback(\r\n      correct\r\n        ? '✅ Correct!'\r\n        : mode === 1\r\n        ? `❌ Incorrect! The correct answer was '${current.country}'`\r\n        : `❌ Incorrect! The capital of '${current.country}' is '${current.capital}'`\r\n    );\r\n\r\n    setIndex(prev => prev + 1);\r\n    setUserAnswer('');\r\n  };\r\n\r\n  const buttonStyle = {\r\n    background: 'linear-gradient(to right, #00c6ff, #0072ff)',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '8px',\r\n    padding: '10px 20px',\r\n    margin: '10px',\r\n    cursor: 'pointer',\r\n    fontSize: '1rem',\r\n    transition: 'background 0.3s ease',\r\n  };\r\n\r\n  const renderQuestion = () => {\r\n    if (loading) return <p>Loading quiz data...</p>;\r\n    if (!mode) return <p>Select a mode to begin.</p>;\r\n    const isQuizDone = quizPairs.length > 0 && index >= quizPairs.length;\r\n\r\n    if (askUsername) {\r\n      return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <h2>🧑 Enter your name to begin:</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            onKeyDown={(e) => e.key === 'Enter' && handleUsernameSubmit()}\r\n            placeholder=\"Your name\"\r\n            style={{\r\n              padding: '10px',\r\n              borderRadius: '6px',\r\n              border: '1px solid #ccc',\r\n              width: '70%',\r\n              marginBottom: '10px'\r\n            }}\r\n          />\r\n          <br />\r\n          <button onClick={handleUsernameSubmit} style={buttonStyle}>\r\n            Continue\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (askContinent) {\r\n      return (\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <h2>🌍 Choose a continent (or leave blank for all):</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={continentInput}\r\n            onChange={(e) => setContinentInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === 'Enter' && submitContinent()}\r\n            placeholder=\"e.g. Asia\"\r\n            style={{\r\n              padding: '10px',\r\n              borderRadius: '6px',\r\n              border: '1px solid #ccc',\r\n              width: '70%',\r\n              marginBottom: '10px'\r\n            }}\r\n          />\r\n          <br />\r\n          <button onClick={submitContinent} style={buttonStyle}>\r\n            Start Quiz\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (isQuizDone) {\r\n      return (\r\n        <div style={{ padding: '20px', backgroundColor: '#ffffff20', borderRadius: '10px' }}>\r\n          <h2>🎉 Quiz Complete!</h2>\r\n          <p>You scored {score} out of {quizPairs.length}.</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!quizPairs.length) return <p>Waiting for quiz data...</p>;\r\n\r\n    const current = quizPairs[index];\r\n    const question =\r\n      mode === 1\r\n        ? `Which country has the capital '${current.capital}'?`\r\n        : `What is the capital of '${current.country}'?`;\r\n\r\n    return (\r\n      <div style={{\r\n        backgroundColor: '#ffffff10',\r\n        padding: '20px',\r\n        borderRadius: '12px',\r\n        boxShadow: '0 4px 20px rgba(0,0,0,0.2)',\r\n        maxWidth: '600px',\r\n        marginBottom: '30px',\r\n      }}>\r\n        <h2 style={{ color: '#ffd700' }}>{question}</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={userAnswer}\r\n          onChange={(e) => setUserAnswer(e.target.value)}\r\n          onKeyDown={(e) => e.key === 'Enter' && checkAnswer()}\r\n          placeholder=\"Enter your answer\"\r\n          style={{\r\n            padding: '10px',\r\n            borderRadius: '8px',\r\n            border: '1px solid #ccc',\r\n            width: '80%',\r\n            marginTop: '10px',\r\n          }}\r\n        />\r\n        <br />\r\n        <button onClick={checkAnswer} style={buttonStyle}>\r\n          Submit Answer\r\n        </button>\r\n        <div style={{\r\n          backgroundColor: '#ffffff20',\r\n          padding: '15px',\r\n          borderRadius: '10px',\r\n          marginTop: '20px',\r\n          textAlign: 'center',\r\n        }}>\r\n          <p style={{ fontWeight: 'bold', fontSize: '1.2rem' }}>{feedback}</p>\r\n          <p style={{ color: '#90ee90' }}>Score: {score} / {index}</p>\r\n        </div>\r\n        {quizPairs.length > 0 && index < quizPairs.length && (\r\n          <CountryMap\r\n            style={{ height: '250px', width: '200px', borderRadius: '10px' }}\r\n            lat={parseFloat(quizPairs[index].lat)}\r\n            lng={parseFloat(quizPairs[index].lng)}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n<div\r\n  style={{\r\n    fontFamily: `'Segoe UI', Roboto, sans-serif`,\r\n    color: '#f5f5f5',\r\n    padding: '30px',\r\n    minHeight: '100vh',\r\nbackgroundImage: `linear-gradient(to right, rgba(32, 55, 65, 0.8), rgba(40, 60, 69, 0.8)), url(\"/world-map.gif\")`,    backgroundSize: 'cover',        // 👈 Ensures full coverage\r\n    backgroundPosition: 'center',   // 👈 Centers image\r\n    backgroundRepeat: 'no-repeat',  // 👈 Prevents tiling\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  }}\r\n>\r\n      <h1 style={{ fontSize: '2.5rem', marginBottom: '20px', color: '#ffd700' }}>\r\n        🌍 Geography Quiz Challenge\r\n      </h1>\r\n\r\n      {!mode && (\r\n        <>\r\n          <button style={buttonStyle} onClick={() => handleModeSelect(1)}>\r\n            Mode 1: Guess Country from Capital\r\n          </button>\r\n          <button style={buttonStyle} onClick={() => handleModeSelect(2)}>\r\n            Mode 2: Guess Capital of Country\r\n          </button>\r\n          <button\r\n            style={{\r\n              ...buttonStyle,\r\n              background: 'linear-gradient(to right, #ff416c, #ff4b2b)'\r\n            }}\r\n            onClick={() => setShowLeaderboard(true)}\r\n          >\r\n            View Leaderboard\r\n          </button>\r\n          {showLeaderboard && (\r\n  <div style={{ marginTop: '30px', width: '100%', maxWidth: '800px' }}>\r\n    <Leaderboard onClose={() => setShowLeaderboard(false)} />\r\n  </div>\r\n)}\r\n        </>\r\n      )}\r\n\r\n      {renderQuestion()}\r\n\r\n      {mode && (\r\n        <button\r\n          style={{\r\n            ...buttonStyle,\r\n            background: 'linear-gradient(to right, #8e2de2, #4a00e0)',\r\n            marginTop: '20px'\r\n          }}\r\n          onClick={() => setMode(null)}\r\n        >\r\n          ⬅ Back to Mode Selection\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
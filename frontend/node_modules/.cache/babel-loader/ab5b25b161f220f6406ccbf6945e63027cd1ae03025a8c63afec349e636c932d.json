{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\web-app\\\\frontend\\\\src\\\\quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Leaderboard from './leaderboard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:5000/api';\nfunction Quiz() {\n  _s();\n  const [mode, setMode] = useState(null);\n  const [quizPairs, setQuizPairs] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [userAnswer, setUserAnswer] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [continentInput, setContinentInput] = useState('');\n  const [askContinent, setAskContinent] = useState(false);\n  const [username, setUsername] = useState('');\n  const [askUsername, setAskUsername] = useState(false);\n  const [scoreSaved, setScoreSaved] = useState(false);\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\n  useEffect(() => {\n    const isQuizDone = quizPairs.length > 0 && index >= quizPairs.length;\n    if (isQuizDone && !scoreSaved) {\n      const sendScore = async () => {\n        try {\n          const response = await fetch('http://localhost:5000/api/score', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              username: username || 'Anonymous',\n              mode,\n              continent: continentInput.trim() || 'All',\n              score,\n              total: quizPairs.length\n            })\n          });\n          const result = await response.json();\n          console.log('Score saved:', result);\n          setScoreSaved(true);\n        } catch (err) {\n          console.error('Error saving score:', err);\n        }\n      };\n      sendScore();\n    }\n  }, [index, quizPairs.length, scoreSaved, username, mode, continentInput, score]);\n\n  // Ask for username after mode selection\n  const handleModeSelect = selectedMode => {\n    setMode(selectedMode);\n    setAskUsername(true);\n    setScore(0);\n    setIndex(0);\n    setFeedback('');\n    setUserAnswer('');\n    setAskContinent(false);\n    setContinentInput('');\n    setScoreSaved(false);\n    setQuizPairs([]);\n  };\n\n  // After username is entered, fetch quiz data\n  const handleUsernameSubmit = () => {\n    setAskUsername(false);\n    if (mode === 2) {\n      setAskContinent(true);\n    } else {\n      fetchQuizData(1);\n    }\n  };\n  const fetchQuizData = async (modeSelected, continent = '') => {\n    setLoading(true);\n    setScore(0);\n    setIndex(0);\n    setFeedback('');\n    setUserAnswer('');\n    setAskContinent(false);\n    setContinentInput(continent || '');\n    setScoreSaved(false);\n    let url = modeSelected === 1 ? `${API_BASE}/mode1` : `${API_BASE}/mode2`;\n    if (continent) {\n      url += `?continent=${continent}`;\n    }\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        const err = await response.json();\n        alert(err.message);\n        setMode(null);\n        setLoading(false);\n        return;\n      }\n      const data = await response.json();\n      setQuizPairs(data);\n    } catch (err) {\n      console.error('Fetch failed:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const submitContinent = () => {\n    setAskContinent(false);\n    fetchQuizData(2, continentInput.trim());\n  };\n  const checkAnswer = () => {\n    if (!quizPairs.length || index >= quizPairs.length) return;\n    const current = quizPairs[index];\n    const answer = userAnswer.trim().toLowerCase();\n    if (mode === 1) {\n      if (answer === current.country.toLowerCase()) {\n        setScore(prev => prev + 1);\n        setFeedback('Correct!');\n      } else {\n        setFeedback(`Incorrect! The correct answer was '${current.country}'`);\n      }\n    } else if (mode === 2) {\n      if (answer === current.capital.toLowerCase()) {\n        setScore(prev => prev + 1);\n        setFeedback('Correct!');\n      } else {\n        setFeedback(`Incorrect! The capital of '${current.country}' is '${current.capital}'`);\n      }\n    }\n    setIndex(prev => prev + 1);\n    setUserAnswer('');\n  };\n  const renderQuestion = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading quiz data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }, this);\n    if (!mode) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a mode to begin.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 23\n    }, this);\n    const isQuizDone = quizPairs.length > 0 && index >= quizPairs.length;\n    if (askUsername) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter your name to begin:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleUsernameSubmit(),\n          placeholder: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUsernameSubmit,\n          style: {\n            marginTop: '10px'\n          },\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n    if (askContinent) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Enter a continent name (or leave blank for all):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: continentInput,\n          onChange: e => setContinentInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && submitContinent(),\n          placeholder: \"Continent name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitContinent,\n          style: {\n            marginTop: '10px'\n          },\n          children: \"Start Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n    if (isQuizDone) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quiz Complete! You scored \", score, \" out of \", quizPairs.length, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 14\n      }, this);\n    }\n    if (!quizPairs.length) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for quiz data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 14\n      }, this);\n    }\n    const current = quizPairs[index];\n    const question = mode === 1 ? `Which country has the capital '${current.capital}'?` : `What is the capital of '${current.country}'?`;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userAnswer,\n        onChange: e => setUserAnswer(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && checkAnswer(),\n        placeholder: \"Enter your answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAnswer,\n        style: {\n          marginTop: '10px'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          background: 'lightpink',\n          width: '290px',\n          marginLeft: '450px',\n          borderRadius: '3px'\n        },\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          background: 'lightpink',\n          width: '100px',\n          marginLeft: '560px',\n          borderRadius: '3px',\n          colour: 'darkgreen',\n          font: 'bold'\n        },\n        children: [\"Score: \", score, \" / \", index]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'Black',\n      fontFamily: 'roboto',\n      textAlign: 'center',\n      padding: '20px',\n      minHeight: '100vh',\n      backgroundImage: 'url(\"/world-map.gif\")',\n      backgroundColor: '#000',\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: 'darkblue'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), !mode && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          background: 'skyblue',\n          border: 'solid lightblue',\n          borderRadius: '5px'\n        },\n        onClick: () => handleModeSelect(1),\n        children: \"Mode 1: Guess Country from Capital\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          background: 'skyblue',\n          border: 'solid lightblue',\n          borderRadius: '5px'\n        },\n        onClick: () => handleModeSelect(2),\n        children: \"Mode 2: Guess Capital of Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 18\n      }, this), showLeaderboard && /*#__PURE__*/_jsxDEV(Leaderboard, {\n        onClose: () => setShowLeaderboard(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          background: '#ffd700',\n          border: '1px solid gold',\n          borderRadius: '5px',\n          padding: '8px 16px'\n        },\n        onClick: () => setShowLeaderboard(true),\n        children: \"View Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }, this), renderQuestion(), mode && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        background: 'white',\n        color: 'darkblue'\n      },\n      onClick: () => setMode(null),\n      children: \"Back to Mode Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"6xIHwQ33QcB/aX2aB3y8t3pcdB0=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Leaderboard","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE","Quiz","_s","mode","setMode","quizPairs","setQuizPairs","index","setIndex","score","setScore","userAnswer","setUserAnswer","feedback","setFeedback","loading","setLoading","continentInput","setContinentInput","askContinent","setAskContinent","username","setUsername","askUsername","setAskUsername","scoreSaved","setScoreSaved","showLeaderboard","setShowLeaderboard","isQuizDone","length","sendScore","response","fetch","method","headers","body","JSON","stringify","continent","trim","total","result","json","console","log","err","error","handleModeSelect","selectedMode","handleUsernameSubmit","fetchQuizData","modeSelected","url","ok","alert","message","data","submitContinent","checkAnswer","current","answer","toLowerCase","country","prev","capital","renderQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","style","marginTop","question","background","width","marginLeft","borderRadius","colour","font","color","fontFamily","textAlign","padding","minHeight","backgroundImage","backgroundColor","backgroundSize","backgroundPosition","backgroundRepeat","border","onClose","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/web-app/frontend/src/quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Leaderboard from './leaderboard';\r\nconst API_BASE = 'http://localhost:5000/api';\r\n\r\nfunction Quiz() {\r\n  const [mode, setMode] = useState(null);\r\n  const [quizPairs, setQuizPairs] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [continentInput, setContinentInput] = useState('');\r\n  const [askContinent, setAskContinent] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [askUsername, setAskUsername] = useState(false);\r\n  const [scoreSaved, setScoreSaved] = useState(false);\r\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const isQuizDone = quizPairs.length > 0 && index >= quizPairs.length;\r\n    if (isQuizDone && !scoreSaved) {\r\n      const sendScore = async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/api/score', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              username: username || 'Anonymous',\r\n              mode,\r\n              continent: continentInput.trim() || 'All',\r\n              score,\r\n              total: quizPairs.length\r\n            })\r\n          });\r\n          const result = await response.json();\r\n          console.log('Score saved:', result);\r\n          setScoreSaved(true);\r\n        } catch (err) {\r\n          console.error('Error saving score:', err);\r\n        }\r\n      };\r\n      sendScore();\r\n    }\r\n  }, [index, quizPairs.length, scoreSaved, username, mode, continentInput, score]);\r\n\r\n  // Ask for username after mode selection\r\n  const handleModeSelect = (selectedMode) => {\r\n    setMode(selectedMode);\r\n    setAskUsername(true);\r\n    setScore(0);\r\n    setIndex(0);\r\n    setFeedback('');\r\n    setUserAnswer('');\r\n    setAskContinent(false);\r\n    setContinentInput('');\r\n    setScoreSaved(false);\r\n    setQuizPairs([]);\r\n  };\r\n\r\n  // After username is entered, fetch quiz data\r\n  const handleUsernameSubmit = () => {\r\n    setAskUsername(false);\r\n    if (mode === 2) {\r\n      setAskContinent(true);\r\n    } else {\r\n      fetchQuizData(1);\r\n    }\r\n  };\r\n\r\n  const fetchQuizData = async (modeSelected, continent = '') => {\r\n    setLoading(true);\r\n    setScore(0);\r\n    setIndex(0);\r\n    setFeedback('');\r\n    setUserAnswer('');\r\n    setAskContinent(false);\r\n    setContinentInput(continent || '');\r\n    setScoreSaved(false);\r\n\r\n    let url = modeSelected === 1 ? `${API_BASE}/mode1` : `${API_BASE}/mode2`;\r\n    if (continent) {\r\n      url += `?continent=${continent}`;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        const err = await response.json();\r\n        alert(err.message);\r\n        setMode(null);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      setQuizPairs(data);\r\n    } catch (err) {\r\n      console.error('Fetch failed:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const submitContinent = () => {\r\n    setAskContinent(false);\r\n    fetchQuizData(2, continentInput.trim());\r\n  };\r\n\r\n  const checkAnswer = () => {\r\n    if (!quizPairs.length || index >= quizPairs.length) return;\r\n\r\n    const current = quizPairs[index];\r\n    const answer = userAnswer.trim().toLowerCase();\r\n\r\n    if (mode === 1) {\r\n      if (answer === current.country.toLowerCase()) {\r\n        setScore(prev => prev + 1);\r\n        setFeedback('Correct!');\r\n      } else {\r\n        setFeedback(`Incorrect! The correct answer was '${current.country}'`);\r\n      }\r\n    } else if (mode === 2) {\r\n      if (answer === current.capital.toLowerCase()) {\r\n        setScore(prev => prev + 1);\r\n        setFeedback('Correct!');\r\n      } else {\r\n        setFeedback(`Incorrect! The capital of '${current.country}' is '${current.capital}'`);\r\n      }\r\n    }\r\n    setIndex(prev => prev + 1);\r\n    setUserAnswer('');\r\n  };\r\n\r\n  const renderQuestion = () => {\r\n    if (loading) return <p>Loading quiz data...</p>;\r\n    if (!mode) return <p>Select a mode to begin.</p>;\r\n    const isQuizDone = quizPairs.length > 0 && index >= quizPairs.length;\r\n\r\n    if (askUsername) {\r\n      return (\r\n        <>\r\n          <h2>Enter your name to begin:</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            onKeyDown={(e) => e.key === 'Enter' && handleUsernameSubmit()}\r\n            placeholder=\"Your name\"\r\n          />\r\n          <br />\r\n          <button onClick={handleUsernameSubmit} style={{ marginTop: '10px' }}>\r\n            Continue\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (askContinent) {\r\n      return (\r\n        <>\r\n          <h2>Enter a continent name (or leave blank for all):</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={continentInput}\r\n            onChange={(e) => setContinentInput(e.target.value)}\r\n            onKeyDown={(e) => e.key === 'Enter' && submitContinent()}\r\n            placeholder=\"Continent name\"\r\n          />\r\n          <br />\r\n          <button onClick={submitContinent} style={{ marginTop: '10px' }}>\r\n            Start Quiz\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (isQuizDone) {\r\n      return <p>Quiz Complete! You scored {score} out of {quizPairs.length}.</p>;\r\n    }\r\n\r\n    if (!quizPairs.length) {\r\n      return <p>Waiting for quiz data...</p>;\r\n    }\r\n\r\n    const current = quizPairs[index];\r\n    const question =\r\n      mode === 1\r\n        ? `Which country has the capital '${current.capital}'?`\r\n        : `What is the capital of '${current.country}'?`;\r\n\r\n    return (\r\n      <>\r\n        <h2>{question}</h2>\r\n        <input\r\n          type=\"text\"\r\n          value={userAnswer}\r\n          onChange={(e) => setUserAnswer(e.target.value)}\r\n          onKeyDown={(e) => e.key === 'Enter' && checkAnswer()}\r\n          placeholder=\"Enter your answer\"\r\n        />\r\n        <br />\r\n        <button onClick={checkAnswer} style={{ marginTop: '10px' }}>\r\n          Submit\r\n        </button>\r\n        <p style={{background:'lightpink',width:'290px',marginLeft:'450px',borderRadius: '3px' }}>{feedback}</p>\r\n        <p style={{background:'lightpink',width:'100px',marginLeft:'560px',borderRadius: '3px' ,colour:'darkgreen',font:'bold'}}>Score: {score} / {index}</p>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        color: 'Black',\r\n        fontFamily: 'roboto',\r\n        textAlign: 'center',\r\n        padding: '20px',\r\n        minHeight: '100vh',\r\n        backgroundImage: 'url(\"/world-map.gif\")',\r\n        backgroundColor: '#000',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n      }}\r\n    >\r\n      <h1 style={{ color: 'darkblue' }}></h1>\r\n\r\n      {!mode && (\r\n        <>\r\n          <button\r\n            style={{ background: 'skyblue', border: 'solid lightblue', borderRadius: '5px' }}\r\n            onClick={() => handleModeSelect(1)}\r\n          >\r\n            Mode 1: Guess Country from Capital\r\n          </button>\r\n          <br /><br />\r\n          <button\r\n            style={{ background: 'skyblue', border: 'solid lightblue', borderRadius: '5px' }}\r\n            onClick={() => handleModeSelect(2)}\r\n          >\r\n            Mode 2: Guess Capital of Country\r\n          </button>\r\n          <br /> <br />\r\n          {showLeaderboard && <Leaderboard onClose={() => setShowLeaderboard(false)} />}\r\n          <button\r\n            style={{ background: '#ffd700', border: '1px solid gold', borderRadius: '5px', padding: '8px 16px' }}\r\n            onClick={() => setShowLeaderboard(true)}\r\n          >\r\n            View Leaderboard\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      <br /><br />\r\n      {renderQuestion()}\r\n\r\n      {mode && (\r\n        <button\r\n          style={{ background:'white',color: 'darkblue' }}\r\n          onClick={() => setMode(null)}\r\n        >\r\n          Back to Mode Selection\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}